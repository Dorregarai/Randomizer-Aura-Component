({
	handleCalculate : function(component, event, helper) {
        if(component.get('v.rangeMin') >= component.get('v.rangeMax')) {           
            helper.showToast({
                title: 'Range Error',
                message: $A.get('{!$Label.c.Incorrect_range}'),
                type: 'error',
                mode: 'pester'
            });
        } else {
            let min = Math.ceil(component.get('v.rangeMin'));
            let max = Math.floor(component.get('v.rangeMax'));
            let rand = Math.floor(Math.random() * (max - min + 1)) + min;
            component.set('v.result', rand);
            
            let action = component.get('c.updateContact');
            
            action.setParams({
                'randomValue': rand
            });
            
            action.setCallback(this, function(res) {
                if(res.getState() === 'SUCCESS') {
                	component.set('v.message', res.getReturnValue());
                    
                    helper.showToast({
                        title : 'Success',
                        message: component.get('v.message'),
                        type: 'success',
                        mode: 'pester'
                    });
            	}
            });
        	$A.enqueueAction(action);
            
        }
    },
    
    handleInputChange : function(component, event, helper) {
        let rangeValue = event.getParam('rangeValue');
        let validity = event.getParam('rangeIsValid');
        
        if(validity) {
            let rangeName = event.getParam('rangeName');
            
            switch(rangeName) {
                case 'min': component.set('v.rangeMin', Number(rangeValue));
                    break;
                case 'max': component.set('v.rangeMax', Number(rangeValue));
                    break;
            }
            
            if(component.get('v.rangeMin') && component.get('v.rangeMax')) {
                component.set('v.isDisabled', false);
            } else { component.set('v.isDisabled', true) }
        } else { 
            component.set('v.isDisabled', true);
            component.set(
                'v.result', 
                null
            );
        }
    }
})
